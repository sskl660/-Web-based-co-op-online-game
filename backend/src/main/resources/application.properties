# ssl 설정
server.port=8080
    server.ssl.key-store= classpath:keystore.p12
    server.ssl.key-store-type=PKCS12
    server.ssl.key-store-password=playssafy

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true

# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 설정
spring.datasource.url=jdbc:mysql://3.38.99.194:3306/playssafy?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=ssafy
spring.datasource.password=PLAYSSAFYA302

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# jwt
jwt.secret=dyAeHubOOc8KaOfYB6XEQoEj1QzRlVgtjNL8PYs1A1tymZvvqkcEU7L1imkKHeDa
# unit is ms. 15 * 24 * 60 * 60 * 1000 = 15days
jwt.expiration=1296000000

# HotSwap
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=false
spring.thymeleaf.cache=false

# Redis
spring.redis.host=3.38.99.194
spring.redis.port=6379
spring.redis.pool.max-idle=8 # pool settings ...
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1




